{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "ReadOnlyAccess",
            "Effect": "Allow",
            "Action": [
                "access-analyzer:GetAccessPreview",
                "access-analyzer:GetAnalyzedResource",
                "access-analyzer:GetAnalyzer",
                "access-analyzer:GetArchiveRule",
                "access-analyzer:GetFinding",
                "access-analyzer:GetGeneratedPolicy",
                "access-analyzer:ListAccessPreviewFindings",
                "access-analyzer:ListAccessPreviews",
                "access-analyzer:ListAnalyzedResources",
                "access-analyzer:ListAnalyzers",
                "access-analyzer:ListArchiveRules",
                "access-analyzer:ListFindings",
                "access-analyzer:ListPolicyGenerations",
                "access-analyzer:ListTagsForResource",
                "access-analyzer:ValidatePolicy",
                "account:GetAlternateContact",
                "account:GetContactInformation",
                "account:GetRegionOptStatus",
                "account:ListRegions",
                "acm:Describe*",
                "acm:Get*",
                "acm:List*",
                "acm-pca:Get*",
                "acm-pca:List*",
                "acm-pca:Describe*",
                "apigateway:GET",
                "apigateway:HEAD",
                "appconfig:GetApplication",
                "appconfig:GetConfiguration",
                "appconfig:GetConfigurationProfile",
                "appconfig:GetDeployment",
                "appconfig:GetDeploymentStrategy",
                "appconfig:GetEnvironment",
                "appconfig:GetHostedConfigurationVersion",
                "appconfig:ListApplications",
                "appconfig:ListConfigurationProfiles",
                "appconfig:ListDeployments",
                "appconfig:ListDeploymentStrategies",
                "appconfig:ListEnvironments",
                "appconfig:ListHostedConfigurationVersions",
                "appconfig:ListTagsForResource",
                "application-autoscaling:Describe*",
                "appstream:Describe*",
                "appstream:List*",
                "appsync:Get*",
                "appsync:List*",
                "artifact:GetReport",
                "artifact:GetReportMetadata",
                "artifact:GetTermForReport",
                "artifact:ListReports",
                "athena:Batch*",
                "athena:Get*",
                "athena:List*",
                "autoscaling-plans:Describe*",
                "autoscaling-plans:GetScalingPlanResourceForecastData",
                "autoscaling:Describe*",
                "autoscaling:GetPredictiveScalingForecast",
                "batch:List*",
                "batch:Describe*",
                "cassandra:Select",
                "chatbot:Get*",
                "chime:Get*",
                "chime:List*",
                "chime:Retrieve*",
                "chime:Search*",
                "chime:Validate*",
                "cloudformation:Describe*",
                "cloudformation:Detect*",
                "cloudformation:Estimate*",
                "cloudformation:Get*",
                "cloudformation:List*",
                "cloudfront:DescribeFunction",
                "cloudfront:Get*",
                "cloudfront:List*",
                "cloudhsm:Describe*",
                "cloudhsm:Get*",
                "cloudhsm:List*",
                "cloudsearch:Describe*",
                "cloudsearch:List*",
                "cloudtrail:Describe*",
                "cloudtrail:Get*",
                "cloudtrail:List*",
                "cloudtrail:LookupEvents",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "codeartifact:DescribeDomain",
                "codeartifact:DescribePackage",
                "codeartifact:DescribePackageVersion",
                "codeartifact:DescribeRepository",
                "codeartifact:GetAuthorizationToken",
                "codeartifact:GetDomainPermissionsPolicy",
                "codeartifact:GetPackageVersionAsset",
                "codeartifact:GetPackageVersionReadme",
                "codeartifact:GetRepositoryEndpoint",
                "codeartifact:GetRepositoryPermissionsPolicy",
                "codeartifact:ListDomains",
                "codeartifact:ListPackages",
                "codeartifact:ListPackageVersionAssets",
                "codeartifact:ListPackageVersionDependencies",
                "codeartifact:ListPackageVersions",
                "codeartifact:ListRepositories",
                "codeartifact:ListRepositoriesInDomain",
                "codeartifact:ListTagsForResource",
                "codeartifact:ReadFromRepository",
                "codebuild:BatchGet*",
                "codebuild:DescribeCodeCoverages",
                "codebuild:DescribeTestCases",
                "codebuild:List*",
                "codecommit:BatchGet*",
                "codecommit:Describe*",
                "codecommit:Get*",
                "codecommit:GitPull",
                "codecommit:List*",
                "codedeploy:BatchGet*",
                "codedeploy:Get*",
                "codedeploy:List*",
                "codeguru-profiler:Describe*",
                "codeguru-profiler:Get*",
                "codeguru-profiler:List*",
                "codeguru-reviewer:Describe*",
                "codeguru-reviewer:Get*",
                "codeguru-reviewer:List*",
                "codepipeline:Get*",
                "codepipeline:List*",
                "codestar-connections:GetConnection",
                "codestar-connections:GetHost",
                "codestar-connections:ListConnections",
                "codestar-connections:ListHosts",
                "codestar-connections:ListTagsForResource",
                "codestar-notifications:describeNotificationRule",
                "codestar-notifications:listEventTypes",
                "codestar-notifications:listNotificationRules",
                "codestar-notifications:listTagsForResource",
                "codestar-notifications:ListTargets",
                "codestar:Describe*",
                "codestar:Get*",
                "codestar:List*",
                "codestar:Verify*",
                "cognito-identity:Describe*",
                "cognito-identity:GetCredentialsForIdentity",
                "cognito-identity:GetIdentityPoolRoles",
                "cognito-identity:GetOpenIdToken",
                "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
                "cognito-identity:List*",
                "cognito-identity:Lookup*",
                "cognito-idp:AdminGet*",
                "cognito-idp:AdminList*",
                "cognito-idp:Describe*",
                "cognito-idp:Get*",
                "cognito-idp:List*",
                "cognito-sync:Describe*",
                "cognito-sync:Get*",
                "cognito-sync:List*",
                "cognito-sync:QueryRecords",
                "compute-optimizer:DescribeRecommendationExportJobs",
                "compute-optimizer:GetAutoScalingGroupRecommendations",
                "compute-optimizer:GetEBSVolumeRecommendations",
                "compute-optimizer:GetEC2InstanceRecommendations",
                "compute-optimizer:GetEC2RecommendationProjectedMetrics",
                "compute-optimizer:GetECSServiceRecommendationProjectedMetrics",
                "compute-optimizer:GetECSServiceRecommendations",
                "compute-optimizer:GetEffectiveRecommendationPreferences",
                "compute-optimizer:GetEnrollmentStatus",
                "compute-optimizer:GetEnrollmentStatusesForOrganization",
                "compute-optimizer:GetLambdaFunctionRecommendations",
                "compute-optimizer:GetRecommendationPreferences",
                "compute-optimizer:GetRecommendationSummaries",
                "config:BatchGetAggregateResourceConfig",
                "config:BatchGetResourceConfig",
                "config:Deliver*",
                "config:Describe*",
                "config:Get*",
                "config:List*",
                "config:SelectAggregateResourceConfig",
                "config:SelectResourceConfig",
                "databrew:DescribeDataset",
                "databrew:DescribeJob",
                "databrew:DescribeJobRun",
                "databrew:DescribeProject",
                "databrew:DescribeRecipe",
                "databrew:DescribeRuleset",
                "databrew:DescribeSchedule",
                "databrew:ListDatasets",
                "databrew:ListJobRuns",
                "databrew:ListJobs",
                "databrew:ListProjects",
                "databrew:ListRecipes",
                "databrew:ListRecipeVersions",
                "databrew:ListRulesets",
                "databrew:ListSchedules",
                "databrew:ListTagsForResource",
                "dataexchange:Get*",
                "dataexchange:List*",
                "datapipeline:Describe*",
                "datapipeline:EvaluateExpression",
                "datapipeline:Get*",
                "datapipeline:List*",
                "datapipeline:QueryObjects",
                "datapipeline:Validate*",
                "datasync:Describe*",
                "datasync:List*",
                "detective:BatchGetGraphMemberDatasources",
                "detective:BatchGetMembershipDatasources",
                "detective:Get*",
                "detective:List*",
                "detective:SearchGraph",
                "devicefarm:Get*",
                "devicefarm:List*",
                "devops-guru:DescribeAccountHealth",
                "devops-guru:DescribeAccountOverview",
                "devops-guru:DescribeAnomaly",
                "devops-guru:DescribeEventSourcesConfig",
                "devops-guru:DescribeFeedback",
                "devops-guru:DescribeInsight",
                "devops-guru:DescribeOrganizationHealth",
                "devops-guru:DescribeOrganizationOverview",
                "devops-guru:DescribeOrganizationResourceCollectionHealth",
                "devops-guru:DescribeResourceCollectionHealth",
                "devops-guru:DescribeServiceIntegration",
                "devops-guru:GetCostEstimation",
                "devops-guru:GetResourceCollection",
                "devops-guru:ListAnomaliesForInsight",
                "devops-guru:ListAnomalousLogGroups",
                "devops-guru:ListEvents",
                "devops-guru:ListInsights",
                "devops-guru:ListMonitoredResources",
                "devops-guru:ListNotificationChannels",
                "devops-guru:ListOrganizationInsights",
                "devops-guru:ListRecommendations",
                "devops-guru:SearchInsights",
                "devops-guru:StartCostEstimation",
                "directconnect:Describe*",
                "discovery:Describe*",
                "discovery:Get*",
                "discovery:List*",
                "dlm:Get*",
                "dms:Describe*",
                "dms:List*",
                "dms:Test*",
                "drs:DescribeJobLogItems",
                "drs:DescribeJobs",
                "drs:DescribeRecoveryInstances",
                "drs:DescribeRecoverySnapshots",
                "drs:DescribeReplicationConfigurationTemplates",
                "drs:DescribeSourceServers",
                "drs:GetFailbackReplicationConfiguration",
                "drs:GetLaunchConfiguration",
                "drs:GetReplicationConfiguration",
                "drs:ListExtensibleSourceServers",
                "drs:ListStagingAccounts",
                "drs:ListTagsForResource",
                "ds:Check*",
                "ds:Describe*",
                "ds:Get*",
                "ds:List*",
                "ds:Verify*",
                "dynamodb:BatchGet*",
                "dynamodb:Describe*",
                "dynamodb:Get*",
                "dynamodb:List*",
                "dynamodb:PartiQLSelect",
                "dynamodb:Query",
                "dynamodb:Scan",
                "ec2:Describe*",
                "ec2:Get*",
                "ec2:ListImagesInRecycleBin",
                "ec2:ListSnapshotsInRecycleBin",
                "ec2:SearchLocalGatewayRoutes",
                "ec2:SearchTransitGatewayRoutes",
                "ec2messages:Get*",
                "ecr-public:BatchCheckLayerAvailability",
                "ecr-public:DescribeImages",
                "ecr-public:DescribeImageTags",
                "ecr-public:DescribeRegistries",
                "ecr-public:DescribeRepositories",
                "ecr-public:GetAuthorizationToken",
                "ecr-public:GetRegistryCatalogData",
                "ecr-public:GetRepositoryCatalogData",
                "ecr-public:GetRepositoryPolicy",
                "ecr-public:ListTagsForResource",
                "ecr:BatchCheck*",
                "ecr:BatchGet*",
                "ecr:Describe*",
                "ecr:Get*",
                "ecr:List*",
                "ecs:Describe*",
                "ecs:List*",
                "eks:Describe*",
                "eks:List*",
                "elastic-inference:DescribeAcceleratorOfferings",
                "elastic-inference:DescribeAccelerators",
                "elastic-inference:DescribeAcceleratorTypes",
                "elastic-inference:ListTagsForResource",
                "elasticache:Describe*",
                "elasticache:List*",
                "elasticbeanstalk:Check*",
                "elasticbeanstalk:Describe*",
                "elasticbeanstalk:List*",
                "elasticbeanstalk:Request*",
                "elasticbeanstalk:Retrieve*",
                "elasticbeanstalk:Validate*",
                "elasticfilesystem:Describe*",
                "elasticloadbalancing:Describe*",
                "elasticmapreduce:Describe*",
                "elasticmapreduce:GetBlockPublicAccessConfiguration",
                "elasticmapreduce:List*",
                "elasticmapreduce:View*",
                "elastictranscoder:List*",
                "elastictranscoder:Read*",
                "elemental-appliances-software:Get*",
                "elemental-appliances-software:List*",
                "emr-containers:DescribeJobRun",
                "emr-containers:DescribeManagedEndpoint",
                "emr-containers:DescribeVirtualCluster",
                "emr-containers:ListJobRuns",
                "emr-containers:ListManagedEndpoints",
                "emr-containers:ListTagsForResource",
                "emr-containers:ListVirtualClusters",
                "es:Describe*",
                "es:ESHttpGet",
                "es:ESHttpHead",
                "es:Get*",
                "es:List*",
                "events:Describe*",
                "events:List*",
                "events:Test*",
                "firehose:Describe*",
                "firehose:List*",
                "fms:GetAdminAccount",
                "fms:GetAppsList",
                "fms:GetComplianceDetail",
                "fms:GetNotificationChannel",
                "fms:GetPolicy",
                "fms:GetProtectionStatus",
                "fms:GetProtocolsList",
                "fms:GetViolationDetails",
                "fms:ListAppsLists",
                "fms:ListComplianceStatus",
                "fms:ListMemberAccounts",
                "fms:ListPolicies",
                "fms:ListProtocolsLists",
                "fms:ListTagsForResource",
                "frauddetector:BatchGetVariable",
                "frauddetector:DescribeDetector",
                "frauddetector:DescribeModelVersions",
                "frauddetector:GetBatchImportJobs",
                "frauddetector:GetBatchPredictionJobs",
                "frauddetector:GetDeleteEventsByEventTypeStatus",
                "frauddetector:GetDetectors",
                "frauddetector:GetDetectorVersion",
                "frauddetector:GetEntityTypes",
                "frauddetector:GetEvent",
                "frauddetector:GetEventPredictionMetadata",
                "frauddetector:GetEventTypes",
                "frauddetector:GetExternalModels",
                "frauddetector:GetKMSEncryptionKey",
                "frauddetector:GetLabels",
                "frauddetector:GetListElements",
                "frauddetector:GetListsMetadata",
                "frauddetector:GetModels",
                "frauddetector:GetModelVersion",
                "frauddetector:GetOutcomes",
                "frauddetector:GetRules",
                "frauddetector:GetVariables",
                "frauddetector:ListEventPredictions",
                "frauddetector:ListTagsForResource",
                "freetier:GetFreeTierAlertPreference",
                "freetier:GetFreeTierUsage",
                "fsx:Describe*",
                "fsx:List*",
                "glacier:Describe*",
                "glacier:Get*",
                "glacier:List*",
                "globalaccelerator:Describe*",
                "globalaccelerator:List*",
                "glue:BatchGetCrawlers",
                "glue:BatchGetDevEndpoints",
                "glue:BatchGetJobs",
                "glue:BatchGetPartition",
                "glue:BatchGetTriggers",
                "glue:BatchGetWorkflows",
                "glue:CheckSchemaVersionValidity",
                "glue:GetCatalogImportStatus",
                "glue:GetClassifier",
                "glue:GetClassifiers",
                "glue:GetCrawler",
                "glue:GetCrawlerMetrics",
                "glue:GetCrawlers",
                "glue:GetDatabase",
                "glue:GetDatabases",
                "glue:GetDataCatalogEncryptionSettings",
                "glue:GetDataflowGraph",
                "glue:GetDevEndpoint",
                "glue:GetDevEndpoints",
                "glue:GetJob",
                "glue:GetJobBookmark",
                "glue:GetJobRun",
                "glue:GetJobRuns",
                "glue:GetJobs",
                "glue:GetMapping",
                "glue:GetMLTaskRun",
                "glue:GetMLTaskRuns",
                "glue:GetMLTransform",
                "glue:GetMLTransforms",
                "glue:GetPartition",
                "glue:GetPartitions",
                "glue:GetPlan",
                "glue:GetRegistry",
                "glue:GetResourcePolicy",
                "glue:GetSchema",
                "glue:GetSchemaByDefinition",
                "glue:GetSchemaVersion",
                "glue:GetSchemaVersionsDiff",
                "glue:GetSecurityConfiguration",
                "glue:GetSecurityConfigurations",
                "glue:GetTable",
                "glue:GetTables",
                "glue:GetTableVersion",
                "glue:GetTableVersions",
                "glue:GetTags",
                "glue:GetTrigger",
                "glue:GetTriggers",
                "glue:GetUserDefinedFunction",
                "glue:GetUserDefinedFunctions",
                "glue:GetWorkflow",
                "glue:GetWorkflowRun",
                "glue:GetWorkflowRunProperties",
                "glue:GetWorkflowRuns",
                "glue:ListCrawlers",
                "glue:ListCrawls",
                "glue:ListDevEndpoints",
                "glue:ListJobs",
                "glue:ListMLTransforms",
                "glue:ListRegistries",
                "glue:ListSchemas",
                "glue:ListSchemaVersions",
                "glue:ListTriggers",
                "glue:ListWorkflows",
                "glue:QuerySchemaVersionMetadata",
                "glue:SearchTables",
                "grafana:DescribeWorkspace",
                "grafana:ListWorkspaces",
                "guardduty:Describe*",
                "guardduty:Get*",
                "guardduty:List*",
                "health:Describe*",
                "healthlake:DescribeFHIRDatastore",
                "healthlake:DescribeFHIRExportJob",
                "healthlake:DescribeFHIRImportJob",
                "healthlake:GetCapabilities",
                "healthlake:ListFHIRDatastores",
                "healthlake:ListFHIRExportJobs",
                "healthlake:ListFHIRImportJobs",
                "healthlake:ListTagsForResource",
                "healthlake:ReadResource",
                "healthlake:SearchWithGet",
                "healthlake:SearchWithPost",
                "iam:Generate*",
                "iam:Get*",
                "iam:List*",
                "iam:Simulate*",
                "imagebuilder:Get*",
                "imagebuilder:List*",
                "importexport:Get*",
                "importexport:List*",
                "inspector:Describe*",
                "inspector:Get*",
                "inspector:List*",
                "inspector:Preview*",
                "inspector2:BatchGetAccountStatus",
                "inspector2:BatchGetFreeTrialInfo",
                "inspector2:DescribeOrganizationConfiguration",
                "inspector2:GetDelegatedAdminAccount",
                "inspector2:GetFindingsReportStatus",
                "inspector2:GetMember",
                "inspector2:ListAccountPermissions",
                "inspector2:ListCoverage",
                "inspector2:ListCoverageStatistics",
                "inspector2:ListDelegatedAdminAccounts",
                "inspector2:ListFilters",
                "inspector2:ListFindingAggregations",
                "inspector2:ListFindings",
                "inspector2:ListMembers",
                "inspector2:ListTagsForResource",
                "inspector2:ListUsageTotals",
                "kafka:Describe*",
                "kafka:DescribeCluster",
                "kafka:DescribeClusterOperation",
                "kafka:DescribeClusterV2",
                "kafka:DescribeConfiguration",
                "kafka:DescribeConfigurationRevision",
                "kafka:Get*",
                "kafka:GetBootstrapBrokers",
                "kafka:GetCompatibleKafkaVersions",
                "kafka:List*",
                "kafka:ListClusterOperations",
                "kafka:ListClusters",
                "kafka:ListClustersV2",
                "kafka:ListConfigurationRevisions",
                "kafka:ListConfigurations",
                "kafka:ListKafkaVersions",
                "kafka:ListNodes",
                "kafka:ListTagsForResource",
                "kafkaconnect:DescribeConnector",
                "kafkaconnect:DescribeCustomPlugin",
                "kafkaconnect:DescribeWorkerConfiguration",
                "kafkaconnect:ListConnectors",
                "kafkaconnect:ListCustomPlugins",
                "kafkaconnect:ListWorkerConfigurations",
                "kinesis:Describe*",
                "kinesis:Get*",
                "kinesis:List*",
                "kinesisanalytics:Describe*",
                "kinesisanalytics:Discover*",
                "kinesisanalytics:Get*",
                "kinesisanalytics:List*",
                "kinesisvideo:Describe*",
                "kinesisvideo:Get*",
                "kinesisvideo:List*",
                "kms:Describe*",
                "kms:Get*",
                "kms:List*",
                "lambda:Get*",
                "lambda:List*",
                "lightsail:GetActiveNames",
                "lightsail:GetAlarms",
                "lightsail:GetAutoSnapshots",
                "lightsail:GetBlueprints",
                "lightsail:GetBucketAccessKeys",
                "lightsail:GetBucketBundles",
                "lightsail:GetBucketMetricData",
                "lightsail:GetBuckets",
                "lightsail:GetBundles",
                "lightsail:GetCertificates",
                "lightsail:GetCloudFormationStackRecords",
                "lightsail:GetContainerAPIMetadata",
                "lightsail:GetContainerImages",
                "lightsail:GetContainerServiceDeployments",
                "lightsail:GetContainerServiceMetricData",
                "lightsail:GetContainerServicePowers",
                "lightsail:GetContainerServices",
                "lightsail:GetDisk",
                "lightsail:GetDisks",
                "lightsail:GetDiskSnapshot",
                "lightsail:GetDiskSnapshots",
                "lightsail:GetDistributionBundles",
                "lightsail:GetDistributionLatestCacheReset",
                "lightsail:GetDistributionMetricData",
                "lightsail:GetDistributions",
                "lightsail:GetDomain",
                "lightsail:GetDomains",
                "lightsail:GetExportSnapshotRecords",
                "lightsail:GetInstance",
                "lightsail:GetInstanceMetricData",
                "lightsail:GetInstancePortStates",
                "lightsail:GetInstances",
                "lightsail:GetInstanceSnapshot",
                "lightsail:GetInstanceSnapshots",
                "lightsail:GetInstanceState",
                "lightsail:GetKeyPair",
                "lightsail:GetKeyPairs",
                "lightsail:GetLoadBalancer",
                "lightsail:GetLoadBalancerMetricData",
                "lightsail:GetLoadBalancers",
                "lightsail:GetLoadBalancerTlsCertificates",
                "lightsail:GetOperation",
                "lightsail:GetOperations",
                "lightsail:GetOperationsForResource",
                "lightsail:GetRegions",
                "lightsail:GetRelationalDatabase",
                "lightsail:GetRelationalDatabaseBlueprints",
                "lightsail:GetRelationalDatabaseBundles",
                "lightsail:GetRelationalDatabaseEvents",
                "lightsail:GetRelationalDatabaseLogEvents",
                "lightsail:GetRelationalDatabaseLogStreams",
                "lightsail:GetRelationalDatabaseMetricData",
                "lightsail:GetRelationalDatabaseParameters",
                "lightsail:GetRelationalDatabases",
                "lightsail:GetRelationalDatabaseSnapshot",
                "lightsail:GetRelationalDatabaseSnapshots",
                "lightsail:GetStaticIp",
                "lightsail:GetStaticIps",
                "lightsail:Is*",
                "logs:Describe*",
                "logs:FilterLogEvents",
                "logs:Get*",
                "logs:ListTagsForResource",
                "logs:ListTagsLogGroup",
                "logs:StartQuery",
                "logs:StopQuery",
                "logs:TestMetricFilter",
                "machinelearning:Describe*",
                "machinelearning:Get*",
                "macie2:BatchGetCustomDataIdentifiers",
                "macie2:DescribeBuckets",
                "macie2:DescribeClassificationJob",
                "macie2:DescribeOrganizationConfiguration",
                "macie2:GetAdministratorAccount",
                "macie2:GetAllowList",
                "macie2:GetAutomatedDiscoveryConfiguration",
                "macie2:GetBucketStatistics",
                "macie2:GetClassificationExportConfiguration",
                "macie2:GetClassificationScope",
                "macie2:GetCustomDataIdentifier",
                "macie2:GetFindings",
                "macie2:GetFindingsFilter",
                "macie2:GetFindingsPublicationConfiguration",
                "macie2:GetFindingStatistics",
                "macie2:GetInvitationsCount",
                "macie2:GetMacieSession",
                "macie2:GetMember",
                "macie2:GetResourceProfile",
                "macie2:GetRevealConfiguration",
                "macie2:GetSensitiveDataOccurrencesAvailability",
                "macie2:GetSensitivityInspectionTemplate",
                "macie2:GetUsageStatistics",
                "macie2:GetUsageTotals",
                "macie2:ListAllowLists",
                "macie2:ListClassificationJobs",
                "macie2:ListClassificationScopes",
                "macie2:ListCustomDataIdentifiers",
                "macie2:ListFindings",
                "macie2:ListFindingsFilters",
                "macie2:ListInvitations",
                "macie2:ListMembers",
                "macie2:ListOrganizationAdminAccounts",
                "macie2:ListResourceProfileArtifacts",
                "macie2:ListResourceProfileDetections",
                "macie2:ListSensitivityInspectionTemplates",
                "macie2:ListTagsForResource",
                "macie2:SearchResources",
                "mgh:Describe*",
                "mgh:GetHomeRegion",
                "mgh:List*",
                "mgn:DescribeJobLogItems",
                "mgn:DescribeJobs",
                "mgn:DescribeLaunchConfigurationTemplates",
                "mgn:DescribeReplicationConfigurationTemplates",
                "mgn:DescribeSourceServers",
                "mgn:DescribeVcenterClients",
                "mgn:GetLaunchConfiguration",
                "mgn:GetReplicationConfiguration",
                "mgn:ListApplications",
                "mgn:ListSourceServerActions",
                "mgn:ListTemplateActions",
                "mgn:ListWaves",
                "mobileanalytics:Get*",
                "mobiletargeting:Get*",
                "mobiletargeting:List*",
                "monitron:GetProject",
                "monitron:GetProjectAdminUser",
                "monitron:ListProjects",
                "monitron:ListTagsForResource",
                "mq:Describe*",
                "mq:List*",
                "network-firewall:DescribeFirewall",
                "network-firewall:DescribeFirewallPolicy",
                "network-firewall:DescribeLoggingConfiguration",
                "network-firewall:DescribeResourcePolicy",
                "network-firewall:DescribeRuleGroup",
                "network-firewall:DescribeRuleGroupMetadata",
                "network-firewall:ListFirewallPolicies",
                "network-firewall:ListFirewalls",
                "network-firewall:ListRuleGroups",
                "network-firewall:ListTagsForResource",
                "networkmanager:DescribeGlobalNetworks",
                "networkmanager:GetConnectAttachment",
                "networkmanager:GetConnections",
                "networkmanager:GetConnectPeer",
                "networkmanager:GetConnectPeerAssociations",
                "networkmanager:GetCoreNetwork",
                "networkmanager:GetCoreNetworkChangeEvents",
                "networkmanager:GetCoreNetworkChangeSet",
                "networkmanager:GetCoreNetworkPolicy",
                "networkmanager:GetCustomerGatewayAssociations",
                "networkmanager:GetDevices",
                "networkmanager:GetLinkAssociations",
                "networkmanager:GetLinks",
                "networkmanager:GetNetworkResourceCounts",
                "networkmanager:GetNetworkResourceRelationships",
                "networkmanager:GetNetworkResources",
                "networkmanager:GetNetworkRoutes",
                "networkmanager:GetNetworkTelemetry",
                "networkmanager:GetResourcePolicy",
                "networkmanager:GetRouteAnalysis",
                "networkmanager:GetSites",
                "networkmanager:GetSiteToSiteVpnAttachment",
                "networkmanager:GetTransitGatewayConnectPeerAssociations",
                "networkmanager:GetTransitGatewayPeering",
                "networkmanager:GetTransitGatewayRegistrations",
                "networkmanager:GetTransitGatewayRouteTableAttachment",
                "networkmanager:GetVpcAttachment",
                "networkmanager:ListAttachments",
                "networkmanager:ListConnectPeers",
                "networkmanager:ListCoreNetworkPolicyVersions",
                "networkmanager:ListCoreNetworks",
                "networkmanager:ListPeerings",
                "networkmanager:ListTagsForResource",
                "opsworks-cm:Describe*",
                "opsworks-cm:List*",
                "opsworks:Describe*",
                "opsworks:Get*",
                "organizations:Describe*",
                "organizations:List*",
                "outposts:Get*",
                "outposts:List*",
                "pi:DescribeDimensionKeys",
                "pi:GetDimensionKeyDetails",
                "pi:GetResourceMetadata",
                "pi:GetResourceMetrics",
                "pi:ListAvailableResourceDimensions",
                "pi:ListAvailableResourceMetrics",
                "proton:GetEnvironment",
                "proton:GetEnvironmentTemplate",
                "proton:GetEnvironmentTemplateVersion",
                "proton:GetService",
                "proton:GetServiceInstance",
                "proton:GetServiceTemplate",
                "proton:GetServiceTemplateVersion",
                "proton:ListEnvironmentAccountConnections",
                "proton:ListEnvironments",
                "proton:ListEnvironmentTemplates",
                "proton:ListServiceInstances",
                "proton:ListServices",
                "proton:ListServiceTemplates",
                "proton:ListTagsForResource",
                "qldb:DescribeJournalS3Export",
                "qldb:DescribeLedger",
                "qldb:GetBlock",
                "qldb:GetDigest",
                "qldb:GetRevision",
                "qldb:ListJournalS3Exports",
                "qldb:ListJournalS3ExportsForLedger",
                "qldb:ListLedgers",
                "qldb:ListTagsForResource",
                "ram:Get*",
                "ram:List*",
                "rbin:GetRule",
                "rbin:ListRules",
                "rbin:ListTagsForResource",
                "rds:Describe*",
                "rds:Download*",
                "rds:List*",
                "redshift:Describe*",
                "redshift:GetReservedNodeExchangeOfferings",
                "redshift:View*",
                "refactor-spaces:GetApplication",
                "refactor-spaces:GetEnvironment",
                "refactor-spaces:GetResourcePolicy",
                "refactor-spaces:GetRoute",
                "refactor-spaces:GetService",
                "refactor-spaces:ListApplications",
                "refactor-spaces:ListEnvironments",
                "refactor-spaces:ListEnvironmentVpcs",
                "refactor-spaces:ListRoutes",
                "refactor-spaces:ListServices",
                "refactor-spaces:ListTagsForResource",
                "resiliencehub:DescribeApp",
                "resiliencehub:DescribeAppAssessment",
                "resiliencehub:DescribeAppVersionResourcesResolutionStatus",
                "resiliencehub:DescribeAppVersionTemplate",
                "resiliencehub:DescribeDraftAppVersionResourcesImportStatus",
                "resiliencehub:DescribeResiliencyPolicy",
                "resiliencehub:ListAlarmRecommendations",
                "resiliencehub:ListAppAssessments",
                "resiliencehub:ListAppComponentCompliances",
                "resiliencehub:ListAppComponentRecommendations",
                "resiliencehub:ListApps",
                "resiliencehub:ListAppVersionResourceMappings",
                "resiliencehub:ListAppVersionResources",
                "resiliencehub:ListAppVersions",
                "resiliencehub:ListRecommendationTemplates",
                "resiliencehub:ListResiliencyPolicies",
                "resiliencehub:ListSopRecommendations",
                "resiliencehub:ListSuggestedResiliencyPolicies",
                "resiliencehub:ListTagsForResource",
                "resiliencehub:ListTestRecommendations",
                "resiliencehub:ListUnsupportedAppVersionResources",
                "resource-explorer-2:BatchGetView",
                "resource-explorer-2:GetDefaultView",
                "resource-explorer-2:GetIndex",
                "resource-explorer-2:GetView",
                "resource-explorer-2:ListIndexes",
                "resource-explorer-2:ListSupportedResourceTypes",
                "resource-explorer-2:ListTagsForResource",
                "resource-explorer-2:ListViews",
                "resource-explorer-2:Search",
                "resource-groups:Get*",
                "resource-groups:List*",
                "resource-groups:Search*",
                "route53-recovery-cluster:Get*",
                "route53-recovery-cluster:ListRoutingControls",
                "route53-recovery-control-config:Describe*",
                "route53-recovery-control-config:List*",
                "route53-recovery-readiness:Get*",
                "route53-recovery-readiness:List*",
                "route53:Get*",
                "route53:List*",
                "route53:Test*",
                "route53domains:Check*",
                "route53domains:Get*",
                "route53domains:List*",
                "route53domains:View*",
                "route53resolver:Get*",
                "route53resolver:List*",
                "rum:GetAppMonitor",
                "rum:GetAppMonitorData",
                "rum:ListAppMonitors",
                "s3-object-lambda:GetObject",
                "s3-object-lambda:GetObjectAcl",
                "s3-object-lambda:GetObjectLegalHold",
                "s3-object-lambda:GetObjectRetention",
                "s3-object-lambda:GetObjectTagging",
                "s3-object-lambda:GetObjectVersion",
                "s3-object-lambda:GetObjectVersionAcl",
                "s3-object-lambda:GetObjectVersionTagging",
                "s3-object-lambda:ListBucket",
                "s3-object-lambda:ListBucketMultipartUploads",
                "s3-object-lambda:ListBucketVersions",
                "s3-object-lambda:ListMultipartUploadParts",
                "s3:DescribeJob",
                "s3:Get*",
                "s3:List*",
                "sagemaker-groundtruth-synthetic:GetAccountDetails",
                "sagemaker-groundtruth-synthetic:GetBatch",
                "sagemaker-groundtruth-synthetic:GetProject",
                "sagemaker-groundtruth-synthetic:ListBatchDataTransfers",
                "sagemaker-groundtruth-synthetic:ListBatchSummaries",
                "sagemaker-groundtruth-synthetic:ListProjectDataTransfers",
                "sagemaker-groundtruth-synthetic:ListProjectSummaries",
                "sagemaker:Describe*",
                "sagemaker:GetSearchSuggestions",
                "sagemaker:List*",
                "sagemaker:Search",
                "scheduler:GetSchedule",
                "scheduler:GetScheduleGroup",
                "scheduler:ListScheduleGroups",
                "scheduler:ListSchedules",
                "scheduler:ListTagsForResource",
                "schemas:Describe*",
                "schemas:Get*",
                "schemas:List*",
                "schemas:Search*",
                "sdb:Get*",
                "sdb:List*",
                "sdb:Select*",
                "secretsmanager:Describe*",
                "secretsmanager:GetResourcePolicy",
                "secretsmanager:List*",
                "securityhub:BatchGetStandardsControlAssociations",
                "securityhub:Describe*",
                "securityhub:Get*",
                "securityhub:List*",
                "serverlessrepo:Get*",
                "serverlessrepo:List*",
                "serverlessrepo:SearchApplications",
                "servicecatalog:Describe*",
                "servicecatalog:GetApplication",
                "servicecatalog:GetAttributeGroup",
                "servicecatalog:List*",
                "servicecatalog:Scan*",
                "servicecatalog:Search*",
                "servicediscovery:Get*",
                "servicediscovery:List*",
                "servicequotas:GetAssociationForServiceQuotaTemplate",
                "servicequotas:GetAWSDefaultServiceQuota",
                "servicequotas:GetRequestedServiceQuotaChange",
                "servicequotas:GetServiceQuota",
                "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
                "servicequotas:ListAWSDefaultServiceQuotas",
                "servicequotas:ListRequestedServiceQuotaChangeHistory",
                "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
                "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
                "servicequotas:ListServiceQuotas",
                "servicequotas:ListServices",
                "ses:BatchGetMetricData",
                "ses:Describe*",
                "ses:Get*",
                "ses:List*",
                "shield:Describe*",
                "shield:Get*",
                "shield:List*",
                "snowball:Describe*",
                "snowball:Get*",
                "snowball:List*",
                "sns:Check*",
                "sns:Get*",
                "sns:List*",
                "sqs:Get*",
                "sqs:List*",
                "sqs:Receive*",
                "ssm-contacts:DescribeEngagement",
                "ssm-contacts:DescribePage",
                "ssm-contacts:GetContact",
                "ssm-contacts:GetContactChannel",
                "ssm-contacts:ListContactChannels",
                "ssm-contacts:ListContacts",
                "ssm-contacts:ListEngagements",
                "ssm-contacts:ListPageReceipts",
                "ssm-contacts:ListPagesByContact",
                "ssm-contacts:ListPagesByEngagement",
                "ssm-incidents:GetIncidentRecord",
                "ssm-incidents:GetReplicationSet",
                "ssm-incidents:GetResourcePolicies",
                "ssm-incidents:GetResponsePlan",
                "ssm-incidents:GetTimelineEvent",
                "ssm-incidents:ListIncidentRecords",
                "ssm-incidents:ListRelatedItems",
                "ssm-incidents:ListReplicationSets",
                "ssm-incidents:ListResponsePlans",
                "ssm-incidents:ListTagsForResource",
                "ssm-incidents:ListTimelineEvents",
                "ssm:Describe*",
                "ssm:Get*",
                "ssm:List*",
                "states:Describe*",
                "states:GetExecutionHistory",
                "states:List*",
                "storagegateway:Describe*",
                "storagegateway:List*",
                "sts:GetAccessKeyInfo",
                "sts:GetCallerIdentity",
                "sts:GetSessionToken",
                "support:DescribeAttachment",
                "support:DescribeCases",
                "support:DescribeCommunications",
                "support:DescribeServices",
                "support:DescribeSeverityLevels",
                "support:DescribeTrustedAdvisorCheckRefreshStatuses",
                "support:DescribeTrustedAdvisorCheckResult",
                "support:DescribeTrustedAdvisorChecks",
                "support:DescribeTrustedAdvisorCheckSummaries",
                "swf:Count*",
                "swf:Describe*",
                "swf:Get*",
                "swf:List*",
                "synthetics:Describe*",
                "synthetics:Get*",
                "synthetics:List*",
                "tag:DescribeReportCreation",
                "tag:Get*",
                "transfer:Describe*",
                "transfer:List*",
                "transfer:TestIdentityProvider",
                "trustedadvisor:Describe*",
                "waf-regional:Get*",
                "waf-regional:List*",
                "waf:Get*",
                "waf:List*",
                "wafv2:CheckCapacity",
                "wafv2:Describe*",
                "wafv2:Get*",
                "wafv2:List*",
                "workspaces:Describe*",
                "xray:BatchGet*",
                "xray:Get*"
            ],
            "Resource": "*"
        }
    ]
}
